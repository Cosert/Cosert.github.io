<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mr.Cosine&#39;s Blog</title>
  
  <subtitle>     欢迎来到&quot;余咸波&quot;的 妙 妙 屋 </subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://cosine22.xyz/"/>
  <updated>2020-02-16T15:18:31.322Z</updated>
  <id>https://cosine22.xyz/</id>
  
  <author>
    <name>Mr.Cose</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Codeforces Round 620 div.2题解(补题)</title>
    <link href="https://cosine22.xyz/2020/02/16/CF-620/"/>
    <id>https://cosine22.xyz/2020/02/16/CF-620/</id>
    <published>2020-02-15T18:58:51.000Z</published>
    <updated>2020-02-16T15:18:31.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>　　挺自闭的一场，最好的情况下可以拿到三道题。B题因为回文串不熟练花了一个小时，C题算法出现漏洞，两次WA错失机会！</p><a id="more"></a><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="A-Two-Rabbits"><a href="#A-Two-Rabbits" class="headerlink" title="A. Two Rabbits"></a><a href="https://codeforces.com/contest/1304/problem/A" target="_blank" rel="noopener">A. Two Rabbits</a></h3><p>time limit per test: 1 second<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</p><p>　　很简单，等价于a+b能不能被y和x的差值整除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int d,x,y,a,b;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int T;scanf(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        scanf(<span class="string">"%d%d%d%d"</span>,&amp;x,&amp;y,&amp;a,&amp;b);</span><br><span class="line">        d=abs(x-y);</span><br><span class="line">        <span class="keyword">if</span>(d%(a+b)) <span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,d/(a+b));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-Longest-Palindrome"><a href="#B-Longest-Palindrome" class="headerlink" title="B. Longest Palindrome"></a><a href="https://codeforces.com/contest/1304/problem/B" target="_blank" rel="noopener">B. Longest Palindrome</a></h3><p>time limit per test: 1 second<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</p><p>　　对字符串类题目熟练的人应该是秒过，可以本人在判断部分漏洞百出，花了一个小时后跳去C题了。判断一个字符串与之前的字符串的反文是否一致，一致则加入队列。注意当m=1时任意一个字符都可以作为回文的中心！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define maxn 100</span></span><br><span class="line"><span class="comment">#define maxm 50</span></span><br><span class="line"></span><br><span class="line">int n,m;</span><br><span class="line">char s[101][51],rs[101][51],c[101],lic[101];</span><br><span class="line">int lis[101],mid[101],cnt=0,mcnt=0;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    mid[0]=-1;</span><br><span class="line">    scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    </span><br><span class="line">    //<span class="keyword">if</span>(m!=1) &#123;</span><br><span class="line">    scanf(<span class="string">"%s"</span>,s[1]);</span><br><span class="line">    <span class="keyword">for</span>(int j=0;j&lt;=m-1;j++) rs[1][m-j-1]=s[1][j]; //建立一个字符顺序相反的串</span><br><span class="line">    <span class="keyword">if</span>(!strcmp(s[1],rs[1])) &#123; //判断字符串本身是不是回文</span><br><span class="line">        //<span class="built_in">printf</span>(<span class="string">"1\n"</span>);</span><br><span class="line">        mcnt++;</span><br><span class="line">        mid[mcnt]=1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=2;i&lt;=n;i++) &#123;</span><br><span class="line">        scanf(<span class="string">"%s"</span>,s[i]);</span><br><span class="line">        <span class="keyword">for</span>(int j=0;j&lt;=m-1;j++) rs[i][m-j-1]=s[i][j];</span><br><span class="line">        </span><br><span class="line">        bool mys=1;        </span><br><span class="line">        <span class="keyword">for</span>(int j=1;j&lt;=i-1;j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!strcmp(s[i],rs[j])) &#123;</span><br><span class="line">                //<span class="built_in">printf</span>(<span class="string">"%d %d match\n"</span>,j,i); </span><br><span class="line">                cnt++;lis[cnt]=j;</span><br><span class="line">                i--;</span><br><span class="line">                n--;</span><br><span class="line">                rs[j][0]=<span class="string">'0'</span>;</span><br><span class="line">                mys=0;</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mys) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!strcmp(s[i],rs[i])) &#123;</span><br><span class="line">                //<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">                mcnt++;</span><br><span class="line">                mid[mcnt]=i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    int sum=cnt*m*2;</span><br><span class="line">    //<span class="built_in">printf</span>(<span class="string">"c %d\n"</span>,cnt);</span><br><span class="line">    //<span class="built_in">printf</span>(<span class="string">"mc %d\n"</span>,mcnt); //这些注释都是调试时留下的，很明显地可以看出错了很多次！</span><br><span class="line">    <span class="keyword">for</span>(int i=1;i&lt;=mcnt;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(rs[mid[i]][0]==<span class="string">'0'</span>) <span class="built_in">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            mid[0]=mid[i];</span><br><span class="line">            //<span class="built_in">printf</span>(<span class="string">"cho %d\n"</span>,mid[0]);</span><br><span class="line">            sum+=m;</span><br><span class="line">            <span class="built_in">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=1;i&lt;=cnt;i++) <span class="built_in">printf</span>(<span class="string">"%s"</span>,s[lis[i]]);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(mid[0]!=-1) <span class="built_in">printf</span>(<span class="string">"%s"</span>,s[mid[0]]);</span><br><span class="line"></span><br><span class="line">    //<span class="built_in">printf</span>(<span class="string">"%d"</span>,cnt);</span><br><span class="line">    <span class="keyword">for</span>(int i=cnt;i&gt;=1;i--) &#123;</span><br><span class="line">        rs[lis[i]][0]=s[lis[i]][m-1];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s"</span>,rs[lis[i]]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br><span class="line">    //&#125;</span><br><span class="line">    /*<span class="keyword">else</span> &#123; //原定用来特判单字符回文串的部分--其实用上面的写法可以轻松判断出！</span><br><span class="line">        int last=-1;</span><br><span class="line">        scanf(<span class="string">"%c"</span>,&amp;c[1]);</span><br><span class="line">        last=1;</span><br><span class="line">        <span class="keyword">for</span>(int i=2;i&lt;=n;i++) &#123;</span><br><span class="line">            scanf(<span class="string">"%c"</span>,&amp;c[i]);</span><br><span class="line">            <span class="keyword">for</span>(int j=1;j&lt;=n-1;j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(c[j]==c[i]) &#123;</span><br><span class="line">                    lic[++cnt]=c[j];</span><br><span class="line">                    c[j]=<span class="string">'0'</span>;</span><br><span class="line">                    <span class="keyword">if</span>(last==j) &#123;</span><br><span class="line">                        last++;</span><br><span class="line">                        <span class="keyword">for</span>(int k=last;k&lt;=n-1;k++) &#123;</span><br><span class="line">                            <span class="keyword">if</span>(c[k]&gt;=<span class="string">'a'</span> &amp;&amp; c[k]&lt;=<span class="string">'z'</span>) &#123;</span><br><span class="line">                                last=k;</span><br><span class="line">                                <span class="built_in">break</span>;</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> <span class="keyword">if</span>(k==n-1) last=-1;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    i--;</span><br><span class="line">                    n--;</span><br><span class="line">                    <span class="built_in">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        int sum=0;</span><br><span class="line">        <span class="keyword">for</span>(int i=1;i&lt;=cnt;i++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,c[i]);</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(last!=-1) &#123;</span><br><span class="line">            sum++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,c[last]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(int i=cnt;i&gt;=1;i--) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>,c[i]);</span><br><span class="line">            sum++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;*/</span><br></pre></td></tr></table></figure><h3 id="C-Air-Conditioner"><a href="#C-Air-Conditioner" class="headerlink" title="C. Air Conditioner"></a><a href="https://codeforces.com/contest/1304/problem/C" target="_blank" rel="noopener">C. Air Conditioner</a></h3><p>time limit per test: 1 second<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</p><p>　　唯一的难点在于客人的需求在一个区间内，只要值在这个区间内都可以使客人满足！而不同的区间有可能存在t1不能及时改变温度到区间而t2可以(t1、t2都属于上个客人两种可能的温度，时间间隔足够温度可以在区间内调整)。<br>　　使用两个变量，分别记录第n个客人来时可以达到的最低温度和最高温度。如果出现最高温度小于最低需求温度/最低温度大于最高需求温度，那么无论如何都无法满足第n个客人的需求。<br>　　比赛时用了很复杂的语句来实现上述判断。结果提交时出现莫名其妙的错误。后来看了出题人的结果，想法一样，出题人用了更简单的语句实现。所以说代码表达一定要等效简练(指相同的执行结果，更加简单的写法)！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define inf 0x3f3f3f3f</span></span><br><span class="line"></span><br><span class="line">int n,m;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int T;scanf(<span class="string">"%d"</span>,&amp;T);int Tc=1;</span><br><span class="line">    <span class="keyword">for</span>(Tc=1;Tc&lt;=T;Tc++) &#123;</span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        int l=m,h=m,no=0,tp=0;</span><br><span class="line">        <span class="keyword">while</span>(n--) &#123;</span><br><span class="line">            //<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n);</span><br><span class="line">            int t,ti,a,b;</span><br><span class="line">            scanf(<span class="string">"%d%d%d"</span>,&amp;ti,&amp;a,&amp;b);</span><br><span class="line">            t=ti-tp;</span><br><span class="line">            tp=ti;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!no) &#123;</span><br><span class="line">                h+=t;l-=t;</span><br><span class="line">                <span class="keyword">if</span>(l&gt;b || h&lt;a) &#123; //与出题人代码唯一不同之处:出题人只用了这里的两句完成了判断，我用了行数至少两倍的代码</span><br><span class="line">                    no=1;</span><br><span class="line">                    <span class="built_in">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                l=max(l,a);h=min(h,b); //温度不能低于或高于当前所需的温度范围！</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(no) <span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>D、E、F正在慢慢补题，可能在下个周末放出(E只需判断是否出现剩余需遍历边数量为偶数，但是解法出现未知错误qwq)。</p><h3 id="D-Shortest-and-Longest-LIS"><a href="#D-Shortest-and-Longest-LIS" class="headerlink" title="D. Shortest and Longest LIS"></a><a href="https://codeforces.com/contest/1304/problem/D" target="_blank" rel="noopener">D. Shortest and Longest LIS</a></h3><p>time limit per test: 3 seconds<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</p><p>　　</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;心得&quot;&gt;&lt;a href=&quot;#心得&quot; class=&quot;headerlink&quot; title=&quot;心得&quot;&gt;&lt;/a&gt;心得&lt;/h2&gt;&lt;p&gt;　　挺自闭的一场，最好的情况下可以拿到三道题。B题因为回文串不熟练花了一个小时，C题算法出现漏洞，两次WA错失机会！&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="C++" scheme="https://cosine22.xyz/tags/C/"/>
    
      <category term="Codeforces" scheme="https://cosine22.xyz/tags/Codeforces/"/>
    
      <category term="div2" scheme="https://cosine22.xyz/tags/div2/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 618 div.2(div.1 A-C)题解</title>
    <link href="https://cosine22.xyz/2020/02/13/CF-618/"/>
    <id>https://cosine22.xyz/2020/02/13/CF-618/</id>
    <published>2020-02-13T07:14:29.000Z</published>
    <updated>2020-02-15T19:01:08.035Z</updated>
    
    <content type="html"><![CDATA[<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>　　这场难度比其他的div2低，A、B、E都只需要在思维上绕一个小弯就可以轻松AC，D<br>题因为考到相似图形的特点可能会卡住，个人认为最难的是C题，因为规律难找。</p><a id="more"></a><p>　　本人因为菜的缘jie故kou，做A题用了10分钟找漏洞，B题想了半小时，交完过预测试已经只剩一小时了。做C被卡住剩半小时跳E题，最后因E题写太慢，两题结果(果然菜就是菜，题目多简单都是一个结果qwq)。但是618的题目确实弯路不多，据说div1场几乎所有的人都3题。</p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><h3 id="A-Non-zero"><a href="#A-Non-zero" class="headerlink" title="A. Non-zero"></a><a href="https://codeforces.com/contest/1300/problem/A" target="_blank" rel="noopener">A. Non-zero</a></h3><p>time limit per test:1 second<br>memory limit per test:256 megabytes<br>input:standard input<br>output:standard output</p><p>　　这题能进行的操作只有在某个数上加1(注意只能加不能减)。操作的结果需在操作数最少的情况下使数组内所有数的和和积都为0。可以很容易地想到要让数组中所有的0都变为1且各数相加和不为0。</p><p>　　记录数组所有数的和和0的数量，操作数此时为0的数量，如果和加上0的数量刚好为0，则操作数再加1。</p><pre><code>上代码:</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int n,a[150];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int T;scanf(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        int down=0,up=0,c0=0,op=0; //可以简化为各数的和，然后直接比对数的和加上0的个数是否得0</span><br><span class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) &#123;</span><br><span class="line">            scanf(<span class="string">"%d"</span>,a+i);</span><br><span class="line">            <span class="keyword">if</span>(a[i]&lt;0) down+=a[i];</span><br><span class="line">            <span class="keyword">if</span>(a[i]&gt;0) up+=a[i];</span><br><span class="line">            <span class="keyword">if</span>(!a[i]) &#123;</span><br><span class="line">                c0++;</span><br><span class="line">                i--;n--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(up==down*-1 || c0&gt;0) &#123;</span><br><span class="line">            <span class="keyword">if</span>(c0&gt;0) &#123;</span><br><span class="line">                down+=c0;</span><br><span class="line">                op+=c0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(up+down==0) op++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,op);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="B-Assigning-to-Classes"><a href="#B-Assigning-to-Classes" class="headerlink" title="B. Assigning to Classes"></a><a href="https://codeforces.com/contest/1300/problem/B" target="_blank" rel="noopener">B. Assigning to Classes</a></h3><p>time limit per test:2 seconds<br>memory limit per test:256 megabytes<br>input:standard input<br>output:standard output</p><p>　　题目大意是要求将n*2个学生分成若干个班，使各班学生智商水平的中位数差的绝对值之和最小，其中各班学生的数量必须为奇数。</p><p>　　中位数指的是一列数量为奇数且数字从小到大排的数组中靠中间的数，题目定义为第n+1个数。第一个样例打破了思维限制，提示你可以分出只有一个学生的班级，通过对样例分析会发现结果总是中间的两数相减。不难想到，如果分成三或更多班级，势必导致更多的差值产生，因此只需分两班，为保证差值最小，将全体2n个学生中数值第n大的学生拿出来单独排班，与第n+1大的学生相减的绝对值为最小差值。</p><p>　　上代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define maxn 200000</span></span><br><span class="line"></span><br><span class="line">int n,a[maxn+1];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int T;scanf(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) &#123;</span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        int hi=n;n&lt;&lt;=1;</span><br><span class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) scanf(<span class="string">"%d"</span>,a+i);</span><br><span class="line"></span><br><span class="line">        sort(a+1,a+n+1);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,abs(a[hi+1]-a[hi]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补题-Div-1-A-C-Anu-Has-a-Function"><a href="#补题-Div-1-A-C-Anu-Has-a-Function" class="headerlink" title="(补题) (Div.1 A)C. Anu Has a Function"></a>(补题) <a href="https://codeforces.com/contest/1300/problem/C" target="_blank" rel="noopener">(Div.1 A)C. Anu Has a Function</a></h3><p>time limit per test:1 second<br>memory limit per test:256 megabytes<br>input:standard input<br>output:standard output</p><p>  给你n个数，要求重新排列，使第一个数对后面每一个数进行“或”操作并减去之后得到的值最大。</p><p>  一开始找规律，甚至联系了好基友帮忙找规律，都没有看出来，然后去E题了。。。</p><p>  补题的时候看了下别人的博客，把思路给理清了。大体的操作是这样的:</p><pre><code>假定f(a,b) a=12,b=61.两个数的二进制位对上，a中没有1 b中有1的位变为1。      12    1 1 0 0       6    0 1 1 0--------------------      14    1 1 1 02.两数相减，关键点来了:就是将b中有1的位归为0。      14    1 1 1 0       6    0 1 1 0--------------------       8    1 0 0 0</code></pre><p>  咳咳咳，言简意赅就是把a将b的二进制位有1的位化为0。那么，如果第一个数有一个位的1是后面其他的数在该位都没有的，那么这个数的这个1将会一直保留到最后。因此我们需要去找符合这个情况的数。</p><p>  遍历一遍数组，记录每个位的1的出现的次数，如果碰到有出现1的次数仅为1的位，需找的这个数并提前到第一个，剩下的数随意输出。</p><p>  参考博客:<a href="">CSDN(抱歉原博找不到了,日后放链接)</a><br>  代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define maxn 100000</span></span><br><span class="line"></span><br><span class="line">int n,a[maxn+1],dig[33]=&#123;0&#125;,cnt=0;</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    //<span class="keyword">for</span>(int i=1;i&lt;=32;i++) <span class="built_in">printf</span>(<span class="string">"%d"</span>,dig[i]);</span><br><span class="line">    //<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) &#123;</span><br><span class="line">        scanf(<span class="string">"%d"</span>,a+i);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(int j=1;j&lt;=32;j++) &#123; </span><br><span class="line">            <span class="keyword">if</span>((a[i]&gt;&gt;(j-1))&amp;1) dig[j]++; //不断地退位，发现有1则将该位的出现1的次数加一，由于最大数1e9对应位数32位，时间复杂度不会超出限制！</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    int t;</span><br><span class="line">    <span class="keyword">for</span>(t=32;t&gt;=1;t--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dig[t]==1) <span class="built_in">break</span>; //找最高位</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!t) <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[n]);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(int i=1;i&lt;=n;i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>((a[i]&gt;&gt;(t-1))&amp;1) &#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=n) swap(a[i],a[n]);</span><br><span class="line"></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d"</span>,a[n]);</span><br><span class="line">                <span class="built_in">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n-1;i++) <span class="built_in">printf</span>(<span class="string">" %d"</span>,a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补题-Div-1-B-D-Aerodynamic"><a href="#补题-Div-1-B-D-Aerodynamic" class="headerlink" title="(补题) (Div.1 B)D. Aerodynamic"></a>(补题) <a href="https://codeforces.com/contest/1300/problem/D" target="_blank" rel="noopener">(Div.1 B)D. Aerodynamic</a></h3><p>time limit per test:1 second<br>memory limit per test:256 megabytes<br>input:standard input<br>output:standard output</p><p>　　只要这个图形满足中心对称就一定可以满足大图形相似！</p><p>　　题目不好描述，但其实观察发现，如果将图形翻转180度后仍能跟原图重合，那么按照操作形成的图形一定是原图放大得来的(相似)。我判断是否为原图的做法是将第n/2+1个点反转并与第一个点连边形成向量，如果第n/2+i个点与第i个点形成的向量与之不相同，那么不满足中心对称。</p><p>　　一开始看到以为是计算几何，被吓跑了，后来经大佬提示和自己思考发现原来是一道很好做的计算几何(草)。</p><p>  代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define maxn 100000</span></span><br><span class="line"></span><br><span class="line">int n,x[maxn+1],y[maxn+1];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    int a,b,v,c;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n&amp;1) &#123;</span><br><span class="line">        <span class="keyword">while</span>(n--) scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b); //奇数边一定不满足中心对称条件</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"nO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(int i=1;i&lt;=(n&gt;&gt;1);i++) scanf(<span class="string">"%d%d"</span>,x+i,y+i);</span><br><span class="line">        scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">        v=x[1]-(a*-1);</span><br><span class="line">        c=y[1]-(b*-1);</span><br><span class="line"></span><br><span class="line">        bool sim=<span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(int i=2;i&lt;=(n&gt;&gt;1);i++) &#123;</span><br><span class="line">            scanf(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(sim &amp;&amp; (x[i]-(a*-1)!=v || y[i]-(b*-1)!=c)) sim=<span class="literal">false</span>; //判断横坐标、纵坐标之差，与第一个组合不相同即不满足中心对称。</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sim) <span class="built_in">printf</span>(<span class="string">"YES"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"NO"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="补题-Div-1-C-E-Water-Balance"><a href="#补题-Div-1-C-E-Water-Balance" class="headerlink" title="(补题) (Div.1 C)E. Water Balance"></a>(补题) <a href="https://codeforces.com/contest/1300/problem/E" target="_blank" rel="noopener">(Div.1 C)E. Water Balance</a></h3><p>time limit per test:3 seconds<br>memory limit per test:256 megabytes<br>input:standard input<br>output:standard output</p><p>　　言简意赅，给你一组数，开始以整数形式输入，可以将一个区间的数加起来取平均，要求通过合理操作将这组数的<a href="https://baike.baidu.com/item/%E5%AD%97%E5%85%B8%E5%BA%8F" target="_blank" rel="noopener">字典序</a>降到最小。</p><p>　　从第二个数开始遍历，如果比前一个(组)数小，则与前一个数取平均合并；前一个数再它的前一个数进行判断，并重复平均操作。目的是将靠前较大的数的值分给后面的数字，使前面的数尽可能小。用pair数组记录参与平均值操作的数的数量即可。</p><p>  代码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pragma GCC optimize("O2")</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line"><span class="comment">#define pdi pair&lt;double,int&gt;</span></span><br><span class="line">const int maxn=1000000;</span><br><span class="line"></span><br><span class="line">int n,a;</span><br><span class="line">pdi s[maxn+1];</span><br><span class="line"></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">    scanf(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"></span><br><span class="line">    scanf(<span class="string">"%lf"</span>,&amp;s[1].first);</span><br><span class="line">    s[1].second=1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=2;i&lt;=n;i++) &#123;</span><br><span class="line">        scanf(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">        s[i].first=a;s[i].second=1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(int j=i;j&gt;=2;j--) &#123; //前一个数更新后还得再与更前面的数比较，使前面的值尽可能被分走</span><br><span class="line">            <span class="keyword">if</span>(s[j-1].first&lt;s[j].first) <span class="built_in">break</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                int l1=s[j-1].second,l2=s[j].second;</span><br><span class="line">                s[j-1].second=l1+l2;</span><br><span class="line">                s[j-1].first=((s[j-1].first*l1)+(s[j].first*l2))/(l1+l2); //平分操作，记得将数量加起来除，否则出错</span><br><span class="line">                i--;n--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i=1;i&lt;=n;i++) &#123;</span><br><span class="line">        double k=s[i].first;int len=s[i].second;</span><br><span class="line">        <span class="keyword">for</span>(int j=1;j&lt;=len;j++) <span class="built_in">printf</span>(<span class="string">"%.9f\n"</span>,k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>　　这道题挺水的，可惜最后几秒没给交上。可能是大佬秒杀二进制运算外加B和C比较水的缘故，div1大多数人拿到了至少3题。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;心得&quot;&gt;&lt;a href=&quot;#心得&quot; class=&quot;headerlink&quot; title=&quot;心得&quot;&gt;&lt;/a&gt;心得&lt;/h2&gt;&lt;p&gt;　　这场难度比其他的div2低，A、B、E都只需要在思维上绕一个小弯就可以轻松AC，D&lt;br&gt;题因为考到相似图形的特点可能会卡住，个人认为最难的是C题，因为规律难找。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="C++" scheme="https://cosine22.xyz/tags/C/"/>
    
      <category term="Codeforces" scheme="https://cosine22.xyz/tags/Codeforces/"/>
    
      <category term="div2" scheme="https://cosine22.xyz/tags/div2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World,世界,你好</title>
    <link href="https://cosine22.xyz/2020/02/13/hello-world/"/>
    <id>https://cosine22.xyz/2020/02/13/hello-world/</id>
    <published>2020-02-12T16:00:00.000Z</published>
    <updated>2020-02-13T12:15:56.472Z</updated>
    
    <content type="html"><![CDATA[<p>　　2020年中旬，在各种磕磕碰碰和摸爬滚打下完成了博客的基础搭建。我认为一个博客最重要的功能是可以将自己的想法分享给别人，同时让其他的人可以了解自己，促进交流。希望接下来的时间里Co Blog可以创造更多的精神财富,同时让我本身得到指导和进步。加油!加油!</p><p>　　本博主要分享关于博主(一个苦逼算法竞赛小萌新)练习题目和参加比赛的经验、心得体会等等内容，偶尔在博客发上几句废话。如果博客可以帮助到苦苦百度无果的你，那么将是我的荣幸。欢迎您的到来!!!</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;cstdio&gt;</span></span><br><span class="line">int <span class="function"><span class="title">main</span></span>() &#123;<span class="built_in">printf</span>(<span class="string">"欢迎欢迎,我是小钴,呐呐呐~"</span>);<span class="built_in">return</span> 0;&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;　　2020年中旬，在各种磕磕碰碰和摸爬滚打下完成了博客的基础搭建。我认为一个博客最重要的功能是可以将自己的想法分享给别人，同时让其他的人可以了解自己，促进交流。希望接下来的时间里Co Blog可以创造更多的精神财富,同时让我本身得到指导和进步。加油!加油!&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
    
      <category term="大总结" scheme="https://cosine22.xyz/tags/%E5%A4%A7%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
